#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND


record(bo, "$(Sys)$(Dev)Val:Cap-SP") {
  field(DESC, "Set Capacitor")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol setCap() $(PORT) 0")
  field(ZNAM, "$(CAP0)")
  field(ONAM, "$(CAP1)")
  field(FLNK, "$(Sys)$(Dev)Val:Cap-Sts")
}

record(bi, "$(Sys)$(Dev)Val:Cap-Sts") {
  field(DESC, "Get Capacitance - Binary")
  field(DTYP, "stream")
  field(PINI,"1")
  field(INP, "@I404.protocol getCap($(Sys)$(Dev)Val:Cap-I) $(PORT) 0")
  field(ZNAM, "$(CAP0)")
  field(ONAM, "$(CAP1)")
}

record(ai, "$(Sys)$(Dev)Val:Cap-I") {
  field(DESC, "Capacitance As Float")
  field(PREC, "2")
  field(EGU, "F")
  field(VAL, "0")
  field(FLNK, "$(Sys)$(Dev)Cmd:CapChk-Calcout")
}

record(ai, "$(Sys)$(Dev)Offset:X-I") {
  field(DESC, "X POSITION OFFSET")
  field(VAL, "0")
  field(PINI, "YES")
}

record(ai, "$(Sys)$(Dev)Offset:Y-I") {
  field(DESC, "Y POSITION OFFSET")
  field(VAL, "0")
  field(PINI, "YES")
}

record(ai, "$(Sys)$(Dev)Pos:XRaw-I") {
  field(DESC, "X POSITION IN FROM I404")
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(FLNK, "$(Sys)$(Dev)DB:Fan2-FOut_")
  field(INP, "@I404.protocol getPos($(Sys)$(Dev)Pos:YRaw-I) $(PORT) 0")
}

record(ai, "$(Sys)$(Dev)Pos:YRaw-I") {
  field(DESC, "Y POSITION IN FROM I404")
}

record(calcout, "$(Sys)$(Dev)DB:X-Calcout_") {
  field(SCAN, "Passive")
  field(CALC, "B-A")
  field(INPA, "$(Sys)$(Dev)Offset:X-I")
  field(INPB, "$(Sys)$(Dev)Pos:XRaw-I")
  field(OUT, "$(Sys)$(Dev)Pos:X-I PP")
  field(OOPT, "Every Time")
}

record(ai, "$(Sys)$(Dev)Pos:X-I") {
  field(SCAN, "Passive")
  field(VAL, "0")
  field(PINI, "YES")
}

record(ai, "$(Sys)$(Dev)Pos:Y-I") {
  field(SCAN, "Passive")
  field(VAL, "0")
  field(PINI, "YES")
}

record(calcout, "$(Sys)$(Dev)DB:Y-Calcout_") {
  field(SCAN, "Passive")
  field(CALC, "B-A")
  field(INPA, "$(Sys)$(Dev)Offset:Y-I")
  field(INPB, "$(Sys)$(Dev)Pos:YRaw-I")
  field(OUT, "$(Sys)$(Dev)Pos:Y-I PP")
  field(OOPT, "Every Time")
}

record(fanout, "$(Sys)$(Dev)DB:Fan1-FOut_") {
  field(LNK1, "$(Sys)$(Dev)DB:SetK-Calcout_")
  field(LNK2, "$(Sys)$(Dev)Val:KAIn-I")
}

record(calcout, "$(Sys)$(Dev)DB:IncrX1-Calcout_") {
  field(SCAN, "Passive")
  field(CALC, "B=1?-2:A+1")
  field(OUT, "$(Sys)$(Dev)Val:XAxis1-SP PP")
  field(OOPT, "Every Time")
}

record(fanout, "$(Sys)$(Dev)DB:Fan2-FOut_") {
  field(SCAN, "Passive")
  field(SELM, "All")
  field(LNK2, "$(Sys)$(Dev)DB:X-Calcout_")
  field(LNK3, "$(Sys)$(Dev)DB:Y-Calcout_")
  field(LNK4, "$(Sys)$(Dev)DB:IncrX1-Calcout_")
  field(LNK5, "$(Sys)$(Dev)Cmd:Osc1-Cmd")
}

record(ao, "$(Sys)$(Dev)Val:XAxis1-SP") {
  field(SCAN, "Passive")
  field(VAL, "-1")
  field(DESC, "GRAPH X AXIS")
  field(PINI, "YES")
  field(OUT, "$(Sys)$(Dev)DB:IncrX1-Calcout_.A")
}

record(bo, "$(Sys)$(Dev)Enbl:Updt-Cmd") {
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(VAL, "1")
  field(OUT, "$(Sys)$(Dev)Pos:XRaw-I.DISA PP")
  field(ZNAM, "Disable")
  field(ONAM, "Enable")
}

record(bo, "$(Sys)$(Dev)Cmd:Cal-Cmd") {
  field(DESC, "Calibrate device")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol doCalib() $(PORT) 0")
#  field(VAL, "0")
#  field(DISV, "0")
}

record(bo, "$(Sys)$(Dev)Cmd:Cal-Cmd") {
  field(FLNK, "$(Sys)$(Dev)Cmd:Cal-Cmd")
#  field(OUT, "$(Sys)$(Dev)Cmd:Cal-Cmd.DISA")
}

record(bo, "$(Sys)$(Dev)Rst-Cmd") {
  field(FLNK, "$(Sys)$(Dev)Rst-Seq")
#  field(OUT, "$(Sys)$(Dev)Rst-Seq.DISA")
}

record(bo, "$(Sys)$(Dev)Cmd:Save-Cmd") {
  field(DESC, "SAVE STATE TO EEPROM")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol save() $(PORT) 0")
}

record(bo, "$(Sys)$(Dev)Cmd:Rcl-Cmd") {
  field(DESC, "RECALL STATE FROM EEPROM")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol recall() $(PORT) 0")
}

record(bo, "$(Sys)$(Dev)Rst-Cmd") {
  field(DESC, "Reset device")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol reset() $(PORT) 0")
}

record(seq, "$(Sys)$(Dev)Rst-Seq") {
  field(DLY1, "0.0")
  field(LNK1, "$(Sys)$(Dev)Cmd:Save-Cmd PP")
  field(DLY2, "3.0")
  field(LNK2, "$(Sys)$(Dev)Rst-Cmd PP")
  field(DLY3, "4.0")
  field(LNK3, "$(Sys)$(Dev)Cmd:Rcl-Cmd PP")
  field(DLY4, "2.0")
  field(LNK4, "$(Sys)$(Dev)Cmd:Init-Cmd PP")
}

record(bo,"$(Sys)$(Dev)Rst-Cmd") {
  field(FLNK,"$(Sys)$(Dev)Rst:1-Seq_")
}

#
# Reset:Seq1 and Seq2 are a set: do not de-couple!
#
record(seq,"$(Sys)$(Dev)Rst:1-Seq_") {
  field(LNK1,"$(Sys)$(Dev)Rst-Sts PP")
  field(DO1, "1") #indicate reset is active
  field(DOL2, "$(Sys)$(Dev)DB:GetCS-Sts_.SCAN") #record GETCS SCAN setting in D02 field
  field(DO3, "0")
  field(LNK3,"$(Sys)$(Dev)DB:GetCS-Sts_.SCAN") # now set scan algorithm to "passive"
  field(DLY4, "1.0") # let pending reads finish 
  field(LNK4, "$(Sys)$(Dev)Rst-Cmd PP")
  field(DLY5, "4.0") # let *RST take effect
  field(LNK5, "$(Sys)$(Dev)Cmd:Cal-Cmd PP")
  field(DLY6, "10.0") # let "calib:gain" take effect
  field(LNK6, "$(Sys)$(Dev)Cmd:Init-Cmd PP")
  field(FLNK, "$(Sys)$(Dev)Rst:2-Seq_") 
}

record(seq,"$(Sys)$(Dev)Rst:2-Seq_") {
  field(DLY1, "2.0") # let "init" from Reset:Seq1 take effect
  field(LNK1, "$(Sys)$(Dev)DB:All-FOut_ PP") # update key indicators
  field(DLY1, "2.0")
  field(LNK1,"$(Sys)$(Dev)Sts:Calib-I PP")
  field(LNK2, "$(Sys)$(Dev)ID-I PP")
  field(LNK3,"$(Sys)$(Dev)DB:Range-FOut_ PP") #int-period,cap,range,res
  field(LNK4,"$(DEVICE):Password.PROC PP") #some functions are locked; unlock them
  field(DO4, "1")
  field(DLY5, "1")
  field(LNK5,"$(Sys)$(Dev)Freq:Suppress-RB PP")
  field(DOL6, "$(Sys)$(Dev)Rst:1-Seq_.DO2") # fetch previous SCAN setting
  field(LNK6, "$(Sys)$(Dev)DB:GetCS-Sts_.SCAN") # restore GETCS previous SCAN setting
  field(LNK7,"$(Sys)$(Dev)Rst-Sts PP") # indicate reset ops are done
}

record(bi,"$(Sys)$(Dev)Rst-Sts") {
  field(DESC,"Reset In-Progress")
  field(PINI,"1")
  field(VAL,"0")
  field(ZNAM,"Idle")
  field(ONAM,"Active")
  field(OSV,"MAJOR")
}

record(longin,"$(Sys)$(Dev)Sts:Calib-I") {
  field(DESC,"fetch calib status only")
  field(DTYP,"stream")
  field(INP,"@I404.protocol getCalib() $(PORT) 0")
  field(FLNK,"$(Sys)$(Dev)Sts:Calib-Calc_")
}

record(calc,"$(Sys)$(Dev)Sts:Calib-Calc_") {
  field(INPA,"$(Sys)$(Dev)Sts:Calib-I NPP")
  field(CALC,"A=15?1:0")
  field(FLNK,"$(Sys)$(Dev)Sts:Calib-Sts")
}

record(bi, "$(Sys)$(Dev)Sts:Calib-Sts") {
  field(INP, "$(Sys)$(Dev)Sts:Calib-Calc_")
  field(ZNAM, "Error")
  field(ONAM, "OK")
}

record(bo, "$(Sys)$(Dev)Cmd:Init-Cmd") {
  field(DESC, "INITIATE ON VALID TRIGGER")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol init() $(PORT) 0")
}

record(mbbo, "$(Sys)$(Dev)Cmd:Range-Sel") {
  field(VAL, "0")
  field(ZRST, "4.0e-7")
  field(ONST, "8.0e-7")
  field(TWST, "2.0e-6")
  field(THST, "1.0e-5")
  field(FLNK, "$(Sys)$(Dev)Val:Range-Str")
  field(FRST, "1.0e-4")
  field(DESC, "SELECTION OF CURRENT RANGES")
}

record(ao,"$(Sys)$(Dev)Val:Range-SP") {
  field(FLNK, "$(Sys)$(Dev)Val:Range-Str")
  field(EGU,"A")
}

record(ai, "$(Sys)$(Dev)Val:Range-I") {
  field(DESC, "GET CURRENT RANGE FROM I404")
  field(PINI, "YES")
  field(DTYP, "stream")
  field(VAL, "0")
  field(INP, "@I404.protocol getRange() $(PORT) 0")
  field(SCAN, "Passive")
  field(EGU,"A")
}

record(ao, "$(Sys)$(Dev)Val:CapSw-SP") {
  field(DESC, "CAPACITANCE SWITCH POINT")
  field(PINI, "YES")
  field(VAL, "1.0e-6")
}

record(calcout, "$(Sys)$(Dev)Cmd:CapChk-Calcout") {
  field(PINI, "YES")
  field(CALC, "(C>=B&&A=3.3e-9)||(C<B&&A=1.0e-10)?C:-1")
  field(INPA, "$(Sys)$(Dev)Val:Cap-I")
  field(INPB, "$(Sys)$(Dev)Val:CapSw-SP")
  field(INPC, "$(Sys)$(Dev)Val:Range-Str PP")
  field(OUT, "$(Sys)$(Dev)DB:Fan1-FOut_ PP")
  field(DESC, "CHECK CAPACITANCE VALID")
}

record(bi, "$(Sys)$(Dev)Cmd:SetRange-Cmd") {
  field(SCAN, "Passive")
  field(FLNK, "$(Sys)$(Dev)DB:Fan4-FOut_")
}

record(stringin, "$(Sys)$(Dev)Val:Range-Str") {
  field(SCAN, "Passive")
  field(FLNK, "$(Sys)$(Dev)Cmd:CapChk-Calcout")
  field(INP, "$(Sys)$(Dev)Val:Range-SP.VAL")
  field(DESC, "REQUESTED RANGE AS VALUE")
}

record(dfanout, "$(Sys)$(Dev)DB:Fan1-FOut_") {
  field(SCAN, "Passive")
  field(OUTA, "$(Sys)$(Dev)Dsbl:SetRng-Calcout.A PP")
  field(OUTB, "$(Sys)$(Dev)DB:SetRng-SP_.VAL")
}

record(calcout, "$(Sys)$(Dev)Dsbl:SetRng-Calcout") {
  field(DESC, "DISABLE SET RANGE")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(VAL, "0")
  field(CALC, "A>=0?0:1")
  field(OUT, "$(Sys)$(Dev)DB:Fan2-FOut_ PP")
}

record(fanout, "$(Sys)$(Dev)DB:Fan4-FOut_") {
  field(LNK1, "$(Sys)$(Dev)DB:SetRng-SP_")
  field(LNK2, "$(Sys)$(Dev)Val:Range-I")
}

record(scalcout, "$(Sys)$(Dev)DB:SetMsg-SCalcout_") {
  field(SCAN, "Passive")
  field(CALC, "A=0?'VALID':'INVALID'")
  field(OUT, "$(Sys)$(Dev)Val:RngMsg2-I PP")
  field(OOPT, "Every Time")
}

record(stringin, "$(Sys)$(Dev)Val:RngMsg1-I") {
  field(VAL, "Capacitance ")
}

record(stringin, "$(Sys)$(Dev)Val:RngMsg2-I") {
  field(SCAN, "Passive")
  field(DESC, "VALID/INVALID MESAGE")
}

record(stringin, "$(Sys)$(Dev)Val:RngMsg3-I") {
  field(VAL, " for selected current range")
}

record(dfanout, "$(Sys)$(Dev)DB:Fan2-FOut_") {
  field(SCAN, "Passive")
  field(OUTA, "$(Sys)$(Dev)DB:SetMsg-SCalcout_.A PP")
  field(OUTB, "$(Sys)$(Dev)Cmd:SetRange-Cmd.DISA")
}

record(ao, "$(Sys)$(Dev)DB:SetRng-SP_") {
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol setRange() $(PORT) 0")
  field(DESC, "EXECUTE A SET CURRENT RANGE")
  field(FLNK, "$(Sys)$(Dev)DB:Range-FOut_")
  field(EGU,"A")
}

record(fanout,"$(Sys)$(Dev)DB:Range-FOut_") {
  field(LNK1,"$(Sys)$(Dev)Val:Range-I")
  field(LNK2,"$(Sys)$(Dev)Time:Intg-RB")
  field(LNK3,"$(Sys)$(Dev)Val:Cap-Sts")
  field(LNK4,"$(Sys)$(Dev)Res-RB")
}

record(bo, "$(Sys)$(Dev)Err-Sts") {
  field(SCAN, "Passive")
  field(OUT, "$(Sys)$(Dev)Enbl:Err-Cmd.B PP")
  field(ZNAM, "Ok")
  field(ONAM, "Error")
  field(VAL, "0")
  field(DESC, "ERROR STATUS")
}

record(bo, "$(Sys)$(Dev)Err:Clr-Cmd") {
  field(VAL, "0")
  field(OUT, "$(Sys)$(Dev)Enbl:Err-Cmd.A PP")
  field(DESC, "CLEAR ERROR STATUS")
  field(SCAN, "Passive")
}

record(calcout, "$(Sys)$(Dev)Enbl:Err-Cmd") {
  field(SCAN, "Passive")
  field(CALC, "B=1&&A=0||C=1?1:0")
  field(OUT, "$(Sys)$(Dev)Err-I.DISA PP")
  field(DESC, "ENABLE GETTING ERRORS")
}

record(calcout, "$(Sys)$(Dev)DB:Err2Bin-Calcout_") {
  field(SCAN, "Passive")
  field(CALC, "A=0?0:1")
  field(OUT, "$(Sys)$(Dev)Err-Sts.VAL PP")
  field(VAL, "0")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(DESC, "ERROR STATUS TO BINARY")
}

record(scalcout, "$(Sys)$(Dev)DB:ErrChk-SCalcout_") {
  field(CALC, "AA!='No error'&&AA!=''")
  field(OUT, "$(Sys)$(Dev)DB:Err2Bin-Calcout_.A PP")
  field(SCAN, "Passive")
  field(INAA, "$(Sys)$(Dev)Err-I.VAL")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(DESC, "CHECK ERROR STATUS")
}

record(stringin, "$(Sys)$(Dev)Err-I") {
  field(DESC, "ERROR MESSAGE FROM I404")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getErr() $(PORT) 0")
  field(FLNK, "$(Sys)$(Dev)DB:ErrChk-SCalcout_")
}


record(bo, "$(Sys)$(Dev)Err:Scan-Cmd") {
#  field(SCAN, "2 second")
  field(FLNK, "$(Sys)$(Dev)Err-I")
  field(DESC, "SCAN FOR ERROR MESSAGES")
}

record(bo, "$(Sys)$(Dev)Err:Ovrd-Cmd") {
  field(DESC, "OVERRIDE ERROR CHECKING")
  field(PINI, "YES")
  field(VAL, "0")
  field(OUT, "$(Sys)$(Dev)Enbl:Err-Cmd.C PP")
  field(ZNAM, "Disable Error")
  field(ONAM, "Enable Error")
}

record(seq, "$(Sys)$(Dev)Cmd:Init-Seq") {
  field(DESC, "PERFORM INITIALISATION")
  field(PINI, "YES")
  field(LNK1, "$(Sys)$(Dev)Out:1-Cmd.PROC")
  field(LNK2, "$(Sys)$(Dev)E:HV-Sts.PROC")
  field(DLY3, "1")
  field(LNK3, "$(Sys)$(Dev)Err:HV-Sts.PROC")
  field(LNK4, "$(Sys)$(Dev)Out:0-Cmd.PROC")
  field(LNK5, "$(Sys)$(Dev)Mode:Init-Sel.PROC")
  field(DLY6, "1")
  field(DO6, "1")
  field(LNK6, "$(DEVICE):Password.PROC PP") #unlock some cmds
}
		
record(mbbo, "$(Sys)$(Dev)Mode:Init-Sel") {
  field(DESC, "INIT POSITION MODE")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(ONST,"None")
  field(TWST,"Quadrant")
  field(THST,"Split")
  field(OUT, "@I404.protocol setMode() $(PORT) 0")
  field(FLNK,"$(Sys)$(Dev)Mode-Sts")
}

record(mbbi,"$(Sys)$(Dev)Mode-Sts") {
  field(DESC,"Monitor readback")
  field(DTYP,"stream")
  field(ONST,"None")
  field(TWST,"Quadrant")
  field(THST,"Split")
  field(INP,"@I404.protocol getMode() $(PORT) 0")
}

record(mbbo,"$(Sys)$(Dev)Val:I2F-SP") {
  field(DESC,"Current-to-Freq Mapping")
  field(PINI,"1")
  field(DTYP,"stream")
  field(ONST,"Absolute")
  field(TWST,"Positive")
  field(THST,"Negative")
  field(OUT,"@I404.protocol setFreq() $(PORT) 0")
  field(FLNK,"$(Sys)$(Dev)Val:I2F-RB")
}

record(mbbi,"$(Sys)$(Dev)Val:I2F-RB") {
  field(DESC,"Current-to-Freq Mapping")
  field(DTYP,"stream")
  field(ONST,"Absolute")
  field(TWST,"Positive")
  field(THST,"Negative")
  field(INP,"@I404.protocol getFreq() $(PORT) 0")
}

record(bi, "$(Sys)$(Dev)E:HV-Sts") {
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(INP, "@I404.protocol checkHV() $(PORT) 0")
  field(ZNAM, "No HV Control")
  field(ONAM, "HV Control Present")
}

record(stringin, "$(Sys)$(Dev)Err:HV-Sts") {
  field(DESC, "ERROR MESSAGE FROM HV CHECK")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getErr() $(PORT) 0")
}

record(bo, "$(Sys)$(Dev)Out:1-Cmd") {
  field(SCAN, "Passive")
  field(VAL, "1")
  field(OUT, "$(Sys)$(Dev)Err:Scan-Cmd.DISA")
  field(DESC, "OUTPUT 1")
}

record(bo, "$(Sys)$(Dev)Out:0-Cmd") {
  field(SCAN, "Passive")
  field(VAL, "0")
  field(OUT, "$(Sys)$(Dev)Err:Scan-Cmd.DISA")
  field(DESC, "OUTPUT 0")
}

record(bi, "$(Sys)$(Dev)DB:GetCS-Sts_") {
  field(PINI,"1")
  field(FLNK, "$(Sys)$(Dev)I:Raw1-I")
}

record(ai, "$(Sys)$(Dev)I:Raw1-I") {
  field(DESC, "CURRENT 1")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getCs($(DEVICE),B,C,D,Overflow_) $(PORT) 0")
  field(SCAN, "Passive")
  field(FLNK, "$(Sys)$(Dev)I:1-Calcout_")
}

record(ai, "$(Sys)$(Dev)I:Raw2-I") {
  field(DESC, "CURRENT 2")
  field(FLNK, "$(Sys)$(Dev)I:2-Calcout_")
}

record(ai, "$(Sys)$(Dev)I:Raw3-I") {
  field(DESC, "CURRENT 3")
  field(FLNK, "$(Sys)$(Dev)I:3-Calcout_")
}

record(ai, "$(Sys)$(Dev)I:Raw4-I") {
  field(DESC, "CURRENT 4")
  field(FLNK, "$(Sys)$(Dev)I:4-Calcout_")
}

record(ai, "$(Sys)$(Dev)Val:KAIn-I") {
  field(DESC, "COMPENSATION FACTOR A IN")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getKs($(DEVICE),Kb,Kc,Kd) $(PORT) 0")
  field(PINI, "YES")
  field(SCAN, "Passive")
}

record(ai, "$(Sys)$(Dev)Val:KBIn-I") {
  field(DESC, "COMPENSATION FACTOR B IN")
}

record(ai, "$(Sys)$(Dev)Val:KCIn-I") {
  field(DESC, "COMPENSATION FACTOR B IN")
}

record(ai, "$(Sys)$(Dev)Val:KDIn-I") {
  field(DESC, "COMPENSATION FACTOR B IN")
}

record(bo, "$(Sys)$(Dev)Rst:Plot1-Cmd") {
  field(OUT, "$(Sys)$(Dev)DB:IncrX1-Calcout_.B PP")
  field(DESC, "RESET THE GRAPH X AXIS")
}

record(bi, "$(Sys)$(Dev)Cmd:SetK-Cmd") {
  field(FLNK, "$(Sys)$(Dev)DB:Fan1-FOut_")
}

record(ai, "$(Sys)$(Dev)Val:KAOut-I") {
  field(VAL, "1.0")
}

record(ai, "$(Sys)$(Dev)Val:KBOut-I") {
  field(VAL, "1.0")
}

record(ai, "$(Sys)$(Dev)Val:KCOut-I") {
  field(VAL, "1.0")
}

record(ai, "$(Sys)$(Dev)Val:KDOut-I") {
  field(VAL, "1.0")
}

record(calcout, "$(Sys)$(Dev)DB:SetK-Calcout_") {
  field(DTYP, "stream")
  field(INPB, "$(Sys)$(Dev)Val:KBOut-I.VAL")
  field(INPC, "$(Sys)$(Dev)Val:KCOut-I.VAL")
  field(INPD, "$(Sys)$(Dev)Val:KDOut-I.VAL")
  field(OUT, "@I404.protocol setKs() $(PORT) 0")
  field(INPA, "$(Sys)$(Dev)Val:KAOut-I.VAL")
}

record(bo, "$(Sys)$(Dev)Trig:1-Cmd") {
  field(DESC, "TRIGGER PV FOR GRAPH")
  field(OUT, "$(Sys)$(Dev)Cmd:Osc1-Cmd.A")
}

record(calcout, "$(Sys)$(Dev)Cmd:Osc1-Cmd") {
  field(DESC, "OSCILLATE THE TRIGGER VALUE")
  field(SCAN, "Passive")
  field(CALC, "!A")
  field(OUT, "$(Sys)$(Dev)Trig:1-Cmd.VAL PP")
  field(OOPT, "Every Time")
}

record(bo, "$(Sys)$(Dev)Out:3-Cmd") {
  field(SCAN, "Passive")
  field(VAL, "0")
  field(OUT, "$(Sys)$(Dev)Rst:Plot1-Cmd PP")
  field(DESC, "OUTPUT 0")
}

record(bo, "$(Sys)$(Dev)Out:4-Cmd") {
  field(SCAN, "Passive")
  field(VAL, "1")
  field(OUT, "$(Sys)$(Dev)Rst:Plot1-Cmd PP")
  field(DESC, "OUTPUT 1")
}

record(mbbi, "$(Sys)$(Dev)Cnt:Chan-Sel") {
  field(ZRST, "ONE")
  field(ONST, "TWO")
  field(TWST, "THREE")
  field(THST, "FOUR")
}

record(ai, "$(Sys)$(Dev)Val:Cal-I") {
  field(VAL, "1")
  field(PINI, "YES")
}

record(ai, "$(Sys)$(Dev)I:1-I") {
  field(SCAN, "Passive")
}

record(calcout, "$(Sys)$(Dev)I:1-Calcout_") {
  field(CALC, "A*B")
  field(INPA, "$(Sys)$(Dev)I:Raw1-I")
  field(INPB, "$(Sys)$(Dev)Val:Cal-I")
  field(OUT, "$(Sys)$(Dev)I:1-I PP")
  field(OOPT, "Every Time")
}

record(calcout, "$(Sys)$(Dev)I:2-Calcout_") {
  field(CALC, "A*B")
  field(INPA, "$(Sys)$(Dev)I:Raw2-I")
  field(INPB, "$(Sys)$(Dev)Val:Cal-I")
  field(OUT, "$(Sys)$(Dev)I:2-I PP")
  field(OOPT, "Every Time")
}

record(calcout, "$(Sys)$(Dev)I:3-Calcout_") {
  field(CALC, "A*B")
  field(INPA, "$(Sys)$(Dev)I:Raw3-I")
  field(INPB, "$(Sys)$(Dev)Val:Cal-I")
  field(OUT, "$(Sys)$(Dev)I:3-I PP")
  field(OOPT, "Every Time")
}

record(calcout, "$(Sys)$(Dev)I:4-Calcout_") {
  field(CALC, "A*B")
  field(INPA, "$(Sys)$(Dev)I:Raw4-I")
  field(INPB, "$(Sys)$(Dev)Val:Cal-I")
  field(OUT, "$(Sys)$(Dev)I:4-I PP")
  field(OOPT, "Every Time")
}

record(ai, "$(Sys)$(Dev)I:2-I") {
  field(SCAN, "Passive")
}

record(ai, "$(Sys)$(Dev)I:3-I") {
  field(SCAN, "Passive")
}

record(ai, "$(Sys)$(Dev)I:4-I") {
  field(SCAN, "Passive")
}

record(bi, "$(Sys)$(Dev)Cmd:GetCS2-Cmd") {
  field(FLNK, "$(Sys)$(Dev)DB:Fan3-FOut_")
  field(SCAN, "1 second")
}

record(bo, "$(Sys)$(Dev)Enbl:ICUpdate-Cmd") {
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(VAL, "1")
  field(OUT, "$(Sys)$(Dev)Cmd:GetCS2-Cmd.DISA")
  field(ZNAM, "Disable")
  field(ONAM, "Enable")
}

record(fanout, "$(Sys)$(Dev)DB:Fan3-FOut_") {
  field(LNK1, "$(Sys)$(Dev)I:Raw1-I")
  field(LNK2, "$(Sys)$(Dev)DB:IncrX2-Calcout_")
  field(LNK3, "$(Sys)$(Dev)Cmd:Osc2-Cmd")
}

record(calcout, "$(Sys)$(Dev)DB:IncrX2-Calcout_") {
  field(SCAN, "Passive")
  field(CALC, "B=1?-2:A+1")
  field(OUT, "$(Sys)$(Dev)Val:XAxis2-SP.VAL PP")
  field(OOPT, "Every Time")
}

record(ao, "$(Sys)$(Dev)Val:XAxis2-SP") {
  field(SCAN, "Passive")
  field(VAL, "-1")
  field(DESC, "GRAPH X AXIS")
  field(PINI, "YES")
  field(OUT, "$(Sys)$(Dev)DB:IncrX2-Calcout_.A")
}

record(bo, "$(Sys)$(Dev)Rst:Plot2-Cmd") {
  field(OUT, "$(Sys)$(Dev)DB:IncrX2-Calcout_.B PP")
  field(DESC, "RESET THE GRAPH X AXIS")
}

record(bo, "$(Sys)$(Dev)Trig:2-Cmd") {
  field(DESC, "TRIGGER PV FOR GRAPH")
  field(OUT, "$(Sys)$(Dev)Cmd:Osc2-Cmd.A")
}

record(calcout, "$(Sys)$(Dev)Cmd:Osc2-Cmd") {
  field(DESC, "OSCILLATE THE TRIGGER VALUE")
  field(SCAN, "Passive")
  field(CALC, "!A")
  field(OUT, "$(Sys)$(Dev)Trig:2-Cmd.VAL PP")
  field(OOPT, "Every Time")
}

record(ao, "$(Sys)$(Dev)E:HV1-SP") {
  field(FLNK, "$(Sys)$(Dev)DB:HV1-Seq_")
  field(OUT, "$(Sys)$(Dev)E:HV2-SP")
}

record(ao, "$(Sys)$(Dev)E:HV2-SP") {
  field(DTYP, "stream")
  field(OUT, "@I404.protocol setHV() $(PORT) 0")
}

record(ai, "$(Sys)$(Dev)E:HVIn-I") {
  field(PINI, "YES")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getHV() $(PORT) 0")
}

record(ao, "$(Sys)$(Dev)E:HVMax1-SP") {
  field(FLNK, "$(Sys)$(Dev)E:HVMax-Seq")
  field(OUT, "$(Sys)$(Dev)E:HVMax2-SP.VAL")
}

record(seq, "$(Sys)$(Dev)E:HVMax-Seq") {
  field(DESC, "NEED TO WAIT FOR HIVO")
  field(SCAN, "Passive")
  field(LNK1, "$(Sys)$(Dev)E:HVMax2-SP.PROC")
  field(LNK2, "$(Sys)$(Dev)E:HVMax-I.PROC")
  field(DLY2, "1")
}

record(ao, "$(Sys)$(Dev)E:HVMax2-SP") {
  field(DTYP, "stream")
  field(OUT, "@I404.protocol setHVM() $(PORT) 0")
}

record(ai, "$(Sys)$(Dev)E:HVMax-I") {
  field(PINI, "YES")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getHVM() $(PORT) 0")
}

record(bo, "$(Sys)$(Dev)Cmd:HV-Cmd") {
  field(ONAM, " ")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(VAL, "1")
  field(ZNAM, "Setting HIVO")
}

record(seq, "$(Sys)$(Dev)DB:HV1-Seq_") {
  field(DESC, "NEED TO WAIT FOR HIVO")
  field(SCAN, "Passive")
  field(LNK2, "$(Sys)$(Dev)Enbl:HVChk-Cmd.PROC")
  field(LNK1, "$(Sys)$(Dev)Dsbl:Err-Cmd.PROC")
  field(LNK3, "$(Sys)$(Dev)E:HV2-SP.PROC")
  field(LNK4, "$(Sys)$(Dev)Err-I.PROC")
}

record(bo, "$(Sys)$(Dev)Cmd:Clr-Cmd") {
  field(DESC, "CLEAR REGISTERS AND MESSAGES")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol clear() $(PORT) 0")
}

record(dfanout, "$(Sys)$(Dev)DB:Fan1-DFOut") {
  field(SCAN, "Passive")
  field(OUTA, "$(Sys)$(Dev)Sts:HVChk-Sts.DISA")
  field(OUTB, "$(Sys)$(Dev)Cmd:HV-Cmd PP")
}

record(bo, "$(Sys)$(Dev)Dsbl:Err-Cmd") {
  field(DOL, "1")
  field(OUT, "$(Sys)$(Dev)Err:Scan-Cmd.DISA")
}

record(bo, "$(Sys)$(Dev)Enbl:Err1-Cmd") {
  field(DOL, "0")
  field(OUT, "$(Sys)$(Dev)Err:Scan-Cmd.DISA")
}

record(seq, "$(Sys)$(Dev)DB:HV2-Seq_") {
  field(LNK1, "$(Sys)$(Dev)Dsbl:HVChk-Cmd.PROC")
  field(LNK2, "$(Sys)$(Dev)Cmd:Clr-Cmd.PROC")
  field(LNK3, "$(Sys)$(Dev)Enbl:Err1-Cmd.PROC")
  field(LNK4, "$(Sys)$(Dev)E:HVIn-I.PROC")
}

record(calcout, "$(Sys)$(Dev)DB:HVWait-Calcout_") {
  field(OOPT, "When Non-zero")
  field(SCAN, "Passive")
  field(CALC, "A")
  field(INPA, "$(Sys)$(Dev)Sts:HVChk-Sts.VAL")
  field(OUT, "$(Sys)$(Dev)DB:HV2-Seq_.PROC")
}

record(bi, "$(Sys)$(Dev)Sts:HVChk-Sts") {
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(FLNK, "$(Sys)$(Dev)DB:HVWait-Calcout_")
  field(INP, "@I404.protocol checkHVR() $(PORT) 0")
  field(ZNAM, "SETTING HIVO")
  field(ONAM, "HIVO IDLE")
}

record(bo, "$(Sys)$(Dev)Dsbl:HVChk-Cmd") {
  field(PINI, "YES")
  field(DOL, "1")
  field(OUT, "$(Sys)$(Dev)DB:Fan1-DFOut.VAL PP")
  field(SCAN, "Passive")
}

record(bo, "$(Sys)$(Dev)Enbl:HVChk-Cmd") {
  field(DOL, "0")
  field(OUT, "$(Sys)$(Dev)DB:Fan1-DFOut.VAL PP")
}

record(ao,"$(Sys)$(Dev)Time:Intg-SP") {
  field(DESC,"Integration time setpoint")
  field(DTYP,"stream")
  field(OUT,"@I404.protocol setPeriod() $(PORT) 0")
  field(EGU,"s")
  field(DRVH,"65")
  field(DRVL,"0.0001")
  field(FLNK,"$(Sys)$(Dev)Time:Intg-RB")
}

record(ai,"$(Sys)$(Dev)Time:Intg-RB") {
  field(DESC,"Integration time readback")
  field(DTYP,"stream")
  field(PINI,"1")
  field(INP,"@I404.protocol getPeriod() $(PORT) 0")
  field(EGU,"s")
  field(HOPR,"65")
  field(LOPR,"0.0001")
}

record(ao,"$(Sys)$(Dev)Freq:Suppress-SP") {
  field(DESC,"Frequency to suppress")
  field(DTYP,"stream")
  field(OUT,"@I404.protocol setSuppressFreq() $(PORT) 0")
  field(EGU,"Hz")
  field(FLNK, "$(Sys)$(Dev)Freq:Suppress-RB")
}

record(ai,"$(Sys)$(Dev)Freq:Suppress-RB") {
  field(DESC,"Suppression frequency readback")
  field(DTYP,"stream")
  field(PINI,"1")
  field(INP,"@I404.protocol getSuppressFreq() $(PORT) 0")
  field(EGU,"Hz")
}

# ID string is > 40 chars. Thus the waveform here.
record(waveform,"$(Sys)$(Dev)ID-I") {
  field(DESC,"Identification string")
  field(DTYP,"stream")
  field(PINI,"1")
  field(FTVL,"CHAR")
  field(NELM,"60")
  field(INP,"@I404.protocol getId() $(PORT) 0")
}
record(longout,"$(Sys)$(Dev)Res-SP") {
  field(DESC,"Resolution setpoint")
  field(DTYP,"stream")
  field(EGU,"bits")
  field(OUT,"@I404.protocol setRes() $(PORT) 0")
  field(DRVH,"20")
  field(DRVL,"16")
  field(FLNK,"$(Sys)$(Dev)Res-RB")
}

record(longin,"$(Sys)$(Dev)Res-RB") {
  field(DESC,"Resolution readback")
  field(DTYP,"stream")
  field(PINI,"1")
  field(EGU,"bits")
  field(INP,"@I404.protocol getRes() $(PORT) 0")
  field(HOPR,"20")
  field(LOPR,"16")
}

record(stringin,"$(Sys)$(Dev)Val:Pwd-I") {
  field(DTYP, "stream")
  field(INP, "@I404.protocol getPassword() $(PORT) 0")
}

record(stringout,"$(DEVICE):Password") {
  field(DTYP, "stream")
  field(PINI, "1") # this seems reqd, else "init" seq fails
  field(OMSL, "supervisory")
  field(DOL, "12345")
  field(OUT,"@I404.protocol setPassword() $(PORT) 0")
}

# Current-overflow status
record(longin, "$(Sys)$(Dev)DB:Ovrflw-I_") {
}

record(calcout, "$(Sys)$(Dev)DB:Ovrflw1-Calcout_") {
	field(INPA, "$(Sys)$(Dev)DB:Ovrflw-I_ CP")
	field(INPB, "1") # bitmask
	field(CALC, "A&B?1:0")
	field(OUT, "$(Sys)$(Dev)Sts:Ovrflw1-Sts PP")
}

record(calcout, "$(Sys)$(Dev)DB:Ovrflw2-Calcout_") {
	field(INPA, "$(Sys)$(Dev)DB:Ovrflw-I_ CP")
	field(INPB, "2") # bitmask
	field(CALC, "A&B?1:0")
	field(OUT, "$(Sys)$(Dev)Sts:Ovrflw2-Sts PP")
}

record(calcout, "$(Sys)$(Dev)DB:Ovrflw3-Calcout_") {
	field(INPA, "$(Sys)$(Dev)DB:Ovrflw-I_ CP")
	field(INPB, "4") # bitmask
	field(CALC, "A&B?1:0")
	field(OUT, "$(Sys)$(Dev)Sts:Ovrflw3-Sts PP")
}

record(calcout, "$(Sys)$(Dev)DB:Ovrflw4-Calcout_") {
	field(INPA, "$(Sys)$(Dev)DB:Ovrflw-I_ CP")
	field(INPB, "8") # bitmask
	field(CALC, "A&B?1:0")
	field(OUT, "$(Sys)$(Dev)Sts:Ovrflw4-Sts PP")
}

record(bi, "$(Sys)$(Dev)Sts:Ovrflw1-Sts") {
	field(ZNAM, "In Range")
	field(ONAM, "Overflow")
	field(ZSV, "NO_ALARM")
	field(OSV, "MAJOR")
}

record(bi, "$(Sys)$(Dev)Sts:Ovrflw2-Sts") {
	field(ZNAM, "In Range")
	field(ONAM, "Overflow")
	field(ZSV, "NO_ALARM")
	field(OSV, "MAJOR")
}

record(bi, "$(Sys)$(Dev)Sts:Ovrflw3-Sts") {
	field(ZNAM, "In Range")
	field(ONAM, "Overflow")
	field(ZSV, "NO_ALARM")
	field(OSV, "MAJOR")
}

record(bi, "$(Sys)$(Dev)Sts:Ovrflw4-Sts") {
	field(ZNAM, "In Range")
	field(ONAM, "Overflow")
	field(ZSV, "NO_ALARM")
	field(OSV, "MAJOR")
}

