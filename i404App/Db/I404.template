#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND


record(bo, "$(DEVICE):SETCAP") {
  field(DESC, "Set Capacitor")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol setCap() $(PORT) 0")
  field(ZNAM, "$(CAP0)")
  field(ONAM, "$(CAP1)")
  field(FLNK, "$(DEVICE):GETCAP")
}

record(bi, "$(DEVICE):GETCAP") {
  field(DESC, "Get Capacitance - Binary")
  field(DTYP, "stream")
  field(PINI,"1")
  field(INP, "@I404.protocol getCap($(DEVICE):CAP) $(PORT) 0")
  field(ZNAM, "$(CAP0)")
  field(ONAM, "$(CAP1)")
}

record(ai, "$(DEVICE):CAP") {
  field(DESC, "Capacitance As Float")
  field(PREC, "2")
  field(EGU, "F")
  field(VAL, "0")
  field(FLNK, "$(DEVICE):CHECK_CAP")
}

record(ai, "$(DEVICE):XOFF") {
  field(DESC, "X POSITION OFFSET")
  field(VAL, "0")
  field(PINI, "YES")
}

record(ai, "$(DEVICE):YOFF") {
  field(DESC, "Y POSITION OFFSET")
  field(VAL, "0")
  field(PINI, "YES")
}

record(ai, "$(DEVICE):XIN") {
  field(DESC, "X POSITION IN FROM I404")
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(FLNK, "$(DEVICE):FAN2")
  field(INP, "@I404.protocol getPos($(DEVICE):YIN) $(PORT) 0")
}

record(ai, "$(DEVICE):YIN") {
  field(DESC, "Y POSITION IN FROM I404")
}

record(calcout, "$(DEVICE):XPOSCALC") {
  field(SCAN, "Passive")
  field(CALC, "B-A")
  field(INPA, "$(DEVICE):XOFF")
  field(INPB, "$(DEVICE):XIN")
  field(OUT, "$(DEVICE):X PP")
  field(OOPT, "Every Time")
}

record(ai, "$(DEVICE):X") {
  field(SCAN, "Passive")
  field(VAL, "0")
  field(PINI, "YES")
}

record(ai, "$(DEVICE):Y") {
  field(SCAN, "Passive")
  field(VAL, "0")
  field(PINI, "YES")
}

record(calcout, "$(DEVICE):YPOSCALC") {
  field(SCAN, "Passive")
  field(CALC, "B-A")
  field(INPA, "$(DEVICE):YOFF")
  field(INPB, "$(DEVICE):YIN")
  field(OUT, "$(DEVICE):Y PP")
  field(OOPT, "Every Time")
}

record(fanout, "$(DEVICE):FAN1") {
  field(LNK1, "$(DEVICE):KSOUT")
  field(LNK2, "$(DEVICE):Ka")
}

record(calcout, "$(DEVICE):INCREMENT_XAXIS") {
  field(SCAN, "Passive")
  field(CALC, "B=1?-2:A+1")
  field(OUT, "$(DEVICE):XAXIS PP")
  field(OOPT, "Every Time")
}

record(fanout, "$(DEVICE):FAN2") {
  field(SCAN, "Passive")
  field(SELM, "All")
  field(LNK2, "$(DEVICE):XPOSCALC")
  field(LNK3, "$(DEVICE):YPOSCALC")
  field(LNK4, "$(DEVICE):INCREMENT_XAXIS")
  field(LNK5, "$(DEVICE):OSCILLATOR")
}

record(ao, "$(DEVICE):XAXIS") {
  field(SCAN, "Passive")
  field(VAL, "-1")
  field(DESC, "GRAPH X AXIS")
  field(PINI, "YES")
  field(OUT, "$(DEVICE):INCREMENT_XAXIS.A")
}

record(bo, "$(DEVICE):ENABLE_UPDATES") {
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(VAL, "1")
  field(OUT, "$(DEVICE):XIN.DISA PP")
  field(ZNAM, "Disable")
  field(ONAM, "Enable")
}

record(bo, "$(DEVICE):EXECUTE_CALIB") {
  field(DESC, "Calibrate device")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol doCalib() $(PORT) 0")
#  field(VAL, "0")
#  field(DISV, "0")
}

record(bo, "$(DEVICE):CALIB") {
  field(FLNK, "$(DEVICE):EXECUTE_CALIB")
#  field(OUT, "$(DEVICE):EXECUTE_CALIB.DISA")
}

record(bo, "$(DEVICE):RESET") {
  field(FLNK, "$(DEVICE):RESET_SEQ")
#  field(OUT, "$(DEVICE):RESET_SEQ.DISA")
}

record(bo, "$(DEVICE):EXECUTE_SAVE") {
  field(DESC, "SAVE STATE TO EEPROM")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol save() $(PORT) 0")
}

record(bo, "$(DEVICE):EXECUTE_RECALL") {
  field(DESC, "RECALL STATE FROM EEPROM")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol recall() $(PORT) 0")
}

record(bo, "$(DEVICE):EXECUTE_RESET") {
  field(DESC, "Reset device")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol reset() $(PORT) 0")
}

record(seq, "$(DEVICE):RESET_SEQ") {
  field(DLY1, "0.0")
  field(LNK1, "$(DEVICE):EXECUTE_SAVE PP")
  field(DLY2, "3.0")
  field(LNK2, "$(DEVICE):EXECUTE_RESET PP")
  field(DLY3, "4.0")
  field(LNK3, "$(DEVICE):EXECUTE_RECALL PP")
  field(DLY4, "2.0")
  field(LNK4, "$(DEVICE):EXECUTE_INIT PP")
}

record(bo,"$(DEVICE):Reset-Cmd") {
  field(FLNK,"$(DEVICE):Reset:Seq1")
}

#
# Reset:Seq1 and Seq2 are a set: do not de-couple!
#
record(seq,"$(DEVICE):Reset:Seq1") {
  field(LNK1,"$(DEVICE):Reset-I PP")
  field(DO1, "1") #indicate reset is active
  field(DOL2, "$(DEVICE):GETCS.SCAN") #record GETCS SCAN setting in D02 field
  field(DO3, "0")
  field(LNK3,"$(DEVICE):GETCS.SCAN") # now set scan algorithm to "passive"
  field(DLY4, "1.0") # let pending reads finish 
  field(LNK4, "$(DEVICE):EXECUTE_RESET PP")
  field(DLY5, "4.0") # let *RST take effect
  field(LNK5, "$(DEVICE):EXECUTE_CALIB PP")
  field(DLY6, "10.0") # let "calib:gain" take effect
  field(LNK6, "$(DEVICE):EXECUTE_INIT PP")
  field(FLNK, "$(DEVICE):Reset:Seq2") 
}

record(seq,"$(DEVICE):Reset:Seq2") {
  field(DLY1, "2.0") # let "init" from Reset:Seq1 take effect
  field(LNK1, "$(DEVICE):All:FOut PP") # update key indicators
  field(DLY1, "2.0")
  field(LNK1,"$(DEVICE):Calib-I PP")
  field(LNK2, "$(DEVICE):Identity PP")
  field(LNK3,"$(DEVICE):Range:FOut PP") #int-period,cap,range,res
  field(LNK4,"$(DEVICE):Password.PROC PP") #some functions are locked; unlock them
  field(DO4, "1")
  field(DLY5, "1")
  field(LNK5,"$(DEVICE):SuppressFreq-I PP")
  field(DOL6, "$(DEVICE):Reset:Seq1.DO2") # fetch previous SCAN setting
  field(LNK6, "$(DEVICE):GETCS.SCAN") # restore GETCS previous SCAN setting
  field(LNK7,"$(DEVICE):Reset-I PP") # indicate reset ops are done
}

record(bi,"$(DEVICE):Reset-I") {
  field(DESC,"Reset In-Progress")
  field(PINI,"1")
  field(VAL,"0")
  field(ZNAM,"Idle")
  field(ONAM,"Active")
  field(OSV,"MAJOR")
}

record(longin,"$(DEVICE):Calib-I") {
  field(DESC,"fetch calib status only")
  field(DTYP,"stream")
  field(INP,"@I404.protocol getCalib() $(PORT) 0")
  field(FLNK,"$(DEVICE):Calib:Status:Calc")
}

record(calc,"$(DEVICE):Calib:Status:Calc") {
  field(INPA,"$(DEVICE):Calib-I NPP")
  field(CALC,"A=15?1:0")
  field(FLNK,"$(DEVICE):Calib:Status")
}

record(bi, "$(DEVICE):Calib:Status") {
  field(INP, "$(DEVICE):Calib:Status:Calc")
  field(ZNAM, "Error")
  field(ONAM, "OK")
}

record(bo, "$(DEVICE):EXECUTE_INIT") {
  field(DESC, "INITIATE ON VALID TRIGGER")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol init() $(PORT) 0")
}

record(mbbo, "$(DEVICE):RANGE") {
  field(VAL, "0")
  field(ZRST, "4.0e-7")
  field(ONST, "8.0e-7")
  field(TWST, "2.0e-6")
  field(THST, "1.0e-5")
  field(FLNK, "$(DEVICE):RANGE_STRING")
  field(FRST, "1.0e-4")
  field(DESC, "SELECTION OF CURRENT RANGES")
}

record(ao,"$(DEVICE):RANGE_") {
  field(FLNK, "$(DEVICE):RANGE_STRING")
  field(EGU,"A")
}

record(ai, "$(DEVICE):RANGEIN") {
  field(DESC, "GET CURRENT RANGE FROM I404")
  field(PINI, "YES")
  field(DTYP, "stream")
  field(VAL, "0")
  field(INP, "@I404.protocol getRange() $(PORT) 0")
  field(SCAN, "Passive")
  field(EGU,"A")
}

record(ao, "$(DEVICE):CAP_SWITCH") {
  field(DESC, "CAPACITANCE SWITCH POINT")
  field(PINI, "YES")
  field(VAL, "1.0e-6")
}

record(calcout, "$(DEVICE):CHECK_CAP") {
  field(PINI, "YES")
  field(CALC, "(C>=B&&A=3.3e-9)||(C<B&&A=1.0e-10)?C:-1")
  field(INPA, "$(DEVICE):CAP")
  field(INPB, "$(DEVICE):CAP_SWITCH")
  field(INPC, "$(DEVICE):RANGE_STRING PP")
  field(OUT, "$(DEVICE):DFAN1 PP")
  field(DESC, "CHECK CAPACITANCE VALID")
}

record(bi, "$(DEVICE):SET_RANGE") {
  field(SCAN, "Passive")
  field(FLNK, "$(DEVICE):FAN4")
}

record(stringin, "$(DEVICE):RANGE_STRING") {
  field(SCAN, "Passive")
  field(FLNK, "$(DEVICE):CHECK_CAP")
  field(INP, "$(DEVICE):RANGE_.VAL")
  field(DESC, "REQUESTED RANGE AS VALUE")
}

record(dfanout, "$(DEVICE):DFAN1") {
  field(SCAN, "Passive")
  field(OUTA, "$(DEVICE):DISSR.A PP")
  field(OUTB, "$(DEVICE):EXECSR.VAL")
}

record(calcout, "$(DEVICE):DISSR") {
  field(DESC, "DISABLE SET RANGE")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(VAL, "0")
  field(CALC, "A>=0?0:1")
  field(OUT, "$(DEVICE):DFAN2 PP")
}

record(fanout, "$(DEVICE):FAN4") {
  field(LNK1, "$(DEVICE):EXECSR")
  field(LNK2, "$(DEVICE):RANGEIN")
}

record(scalcout, "$(DEVICE):SET_MESSAGE") {
  field(SCAN, "Passive")
  field(CALC, "A=0?'VALID':'INVALID'")
  field(OUT, "$(DEVICE):RANGE_MESSAGE2 PP")
  field(OOPT, "Every Time")
}

record(stringin, "$(DEVICE):RANGE_MESSAGE1") {
  field(VAL, "Capacitance ")
}

record(stringin, "$(DEVICE):RANGE_MESSAGE2") {
  field(SCAN, "Passive")
  field(DESC, "VALID/INVALID MESAGE")
}

record(stringin, "$(DEVICE):RANGE_MESSAGE3") {
  field(VAL, " for selected current range")
}

record(dfanout, "$(DEVICE):DFAN2") {
  field(SCAN, "Passive")
  field(OUTA, "$(DEVICE):SET_MESSAGE.A PP")
  field(OUTB, "$(DEVICE):SET_RANGE.DISA")
}

record(ao, "$(DEVICE):EXECSR") {
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol setRange() $(PORT) 0")
  field(DESC, "EXECUTE A SET CURRENT RANGE")
  field(FLNK, "$(DEVICE):Range:FOut")
  field(EGU,"A")
}

record(fanout,"$(DEVICE):Range:FOut") {
  field(LNK1,"$(DEVICE):RANGEIN")
  field(LNK2,"$(DEVICE):IntPeriod-I")
  field(LNK3,"$(DEVICE):GETCAP")
  field(LNK4,"$(DEVICE):Resolution-I")
}

record(stringout, "$(DEVICE):PASSWORD") {
  field(DESC, "STORE AND SET PASSWORD")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol setPass() $(PORT) 0")
}

record(bo, "$(DEVICE):STATUS") {
  field(SCAN, "Passive")
  field(OUT, "$(DEVICE):ENBERR.B PP")
  field(ZNAM, "Ok")
  field(ONAM, "Error")
  field(VAL, "0")
  field(DESC, "ERROR STATUS")
}

record(bo, "$(DEVICE):CLRERR") {
  field(VAL, "0")
  field(OUT, "$(DEVICE):ENBERR.A PP")
  field(DESC, "CLEAR ERROR STATUS")
  field(SCAN, "Passive")
}

record(calcout, "$(DEVICE):ENBERR") {
  field(SCAN, "Passive")
  field(CALC, "B=1&&A=0||C=1?1:0")
  field(OUT, "$(DEVICE):ERR.DISA PP")
  field(DESC, "ENABLE GETTING ERRORS")
}

record(calcout, "$(DEVICE):ERRBIN") {
  field(SCAN, "Passive")
  field(CALC, "A=0?0:1")
  field(OUT, "$(DEVICE):STATUS.VAL PP")
  field(VAL, "0")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(DESC, "ERROR STATUS TO BINARY")
}

record(scalcout, "$(DEVICE):CHKERR") {
  field(CALC, "AA!='No error'&&AA!=''")
  field(OUT, "$(DEVICE):ERRBIN.A PP")
  field(SCAN, "Passive")
  field(INAA, "$(DEVICE):ERR.VAL")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(DESC, "CHECK ERROR STATUS")
}

record(stringin, "$(DEVICE):ERR") {
  field(DESC, "ERROR MESSAGE FROM I404")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getErr() $(PORT) 0")
  field(FLNK, "$(DEVICE):CHKERR")
}


record(bo, "$(DEVICE):SCNERR") {
#  field(SCAN, "2 second")
  field(FLNK, "$(DEVICE):ERR")
  field(DESC, "SCAN FOR ERROR MESSAGES")
}

record(bo, "$(DEVICE):OVRERR") {
  field(DESC, "OVERRIDE ERROR CHECKING")
  field(PINI, "YES")
  field(VAL, "0")
  field(OUT, "$(DEVICE):ENBERR.C PP")
  field(ZNAM, "Disable Error")
  field(ONAM, "Enable Error")
}

record(seq, "$(DEVICE):INIT") {
  field(DESC, "PERFORM INITIALISATION")
  field(PINI, "YES")
  field(LNK1, "$(DEVICE):OUT1.PROC")
  field(LNK2, "$(DEVICE):HVSTAT.PROC")
  field(DLY3, "1")
  field(LNK3, "$(DEVICE):HVERR.PROC")
  field(LNK4, "$(DEVICE):OUT0.PROC")
  field(LNK5, "$(DEVICE):INITMODE.PROC")
  field(DLY6, "1")
  field(DO6, "1")
  field(LNK6, "$(DEVICE):Password.PROC PP") #unlock some cmds
}
		
record(mbbo, "$(DEVICE):INITMODE") {
  field(DESC, "INIT POSITION MODE")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(ONST,"None")
  field(TWST,"Quadrant")
  field(THST,"Split")
  field(OUT, "@I404.protocol setMode() $(PORT) 0")
  field(FLNK,"$(DEVICE):MODE-I")
}

record(mbbi,"$(DEVICE):MODE-I") {
  field(DESC,"Monitor readback")
  field(DTYP,"stream")
  field(ONST,"None")
  field(TWST,"Quadrant")
  field(THST,"Split")
  field(INP,"@I404.protocol getMode() $(PORT) 0")
}

record(mbbo,"$(DEVICE):FREQ") {
  field(DESC,"Current-to-Freq Mapping")
  field(PINI,"1")
  field(DTYP,"stream")
  field(ONST,"Absolute")
  field(TWST,"Positive")
  field(THST,"Negative")
  field(OUT,"@I404.protocol setFreq() $(PORT) 0")
  field(FLNK,"$(DEVICE):FREQ-I")
}

record(mbbi,"$(DEVICE):FREQ-I") {
  field(DESC,"Current-to-Freq Mapping")
  field(DTYP,"stream")
  field(ONST,"Absolute")
  field(TWST,"Positive")
  field(THST,"Negative")
  field(INP,"@I404.protocol getFreq() $(PORT) 0")
}

record(bi, "$(DEVICE):HVSTAT") {
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(INP, "@I404.protocol checkHV() $(PORT) 0")
  field(ZNAM, "No HV Control")
  field(ONAM, "HV Control Present")
}

record(stringin, "$(DEVICE):HVERR") {
  field(DESC, "ERROR MESSAGE FROM HV CHECK")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getErr() $(PORT) 0")
}

record(bo, "$(DEVICE):OUT1") {
  field(SCAN, "Passive")
  field(VAL, "1")
  field(OUT, "$(DEVICE):SCNERR.DISA")
  field(DESC, "OUTPUT 1")
}

record(bo, "$(DEVICE):OUT0") {
  field(SCAN, "Passive")
  field(VAL, "0")
  field(OUT, "$(DEVICE):SCNERR.DISA")
  field(DESC, "OUTPUT 0")
}

record(bi, "$(DEVICE):GETCS") {
  field(PINI,"1")
  field(FLNK, "$(DEVICE):A")
}

record(ai, "$(DEVICE):A") {
  field(DESC, "CURRENT 1")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getCs($(DEVICE),B,C,D) $(PORT) 0")
  field(SCAN, "Passive")
  field(FLNK, "$(DEVICE):ICCALC1")
}

record(ai, "$(DEVICE):B") {
  field(DESC, "CURRENT 2")
  field(FLNK, "$(DEVICE):ICCALC2")
}

record(ai, "$(DEVICE):C") {
  field(DESC, "CURRENT 3")
  field(FLNK, "$(DEVICE):ICCALC3")
}

record(ai, "$(DEVICE):D") {
  field(DESC, "CURRENT 4")
  field(FLNK, "$(DEVICE):ICCALC4")
}

record(ai, "$(DEVICE):Ka") {
  field(DESC, "COMPENSATION FACTOR A IN")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getKs($(DEVICE),Kb,Kc,Kd) $(PORT) 0")
  field(PINI, "YES")
  field(SCAN, "Passive")
}

record(ai, "$(DEVICE):Kb") {
  field(DESC, "COMPENSATION FACTOR B IN")
}

record(ai, "$(DEVICE):Kc") {
  field(DESC, "COMPENSATION FACTOR B IN")
}

record(ai, "$(DEVICE):Kd") {
  field(DESC, "COMPENSATION FACTOR B IN")
}

record(bo, "$(DEVICE):RESET_PLOT") {
  field(OUT, "$(DEVICE):INCREMENT_XAXIS.B PP")
  field(DESC, "RESET THE GRAPH X AXIS")
}

record(bi, "$(DEVICE):SETKS") {
  field(FLNK, "$(DEVICE):FAN1")
}

record(ai, "$(DEVICE):KaOUT") {
  field(VAL, "1.0")
}

record(ai, "$(DEVICE):KbOUT") {
  field(VAL, "1.0")
}

record(ai, "$(DEVICE):KcOUT") {
  field(VAL, "1.0")
}

record(ai, "$(DEVICE):KdOUT") {
  field(VAL, "1.0")
}

record(calcout, "$(DEVICE):KSOUT") {
  field(DTYP, "stream")
  field(INPB, "$(DEVICE):KbOUT.VAL")
  field(INPC, "$(DEVICE):KcOUT.VAL")
  field(INPD, "$(DEVICE):KdOUT.VAL")
  field(OUT, "@I404.protocol setKs() $(PORT) 0")
  field(INPA, "$(DEVICE):KaOUT.VAL")
}

record(bo, "$(DEVICE):TRIGGER") {
  field(DESC, "TRIGGER PV FOR GRAPH")
  field(OUT, "$(DEVICE):OSCILLATOR.A")
}

record(calcout, "$(DEVICE):OSCILLATOR") {
  field(DESC, "OSCILLATE THE TRIGGER VALUE")
  field(SCAN, "Passive")
  field(CALC, "!A")
  field(OUT, "$(DEVICE):TRIGGER.VAL PP")
  field(OOPT, "Every Time")
}

record(bo, "$(DEVICE):OUT2") {
  field(SCAN, "Passive")
  field(VAL, "0")
  field(OUT, "$(DEVICE):RESET_PLOT PP")
  field(DESC, "OUTPUT 0")
}

record(bo, "$(DEVICE):OUT3") {
  field(SCAN, "Passive")
  field(VAL, "1")
  field(OUT, "$(DEVICE):RESET_PLOT PP")
  field(DESC, "OUTPUT 1")
}

record(mbbi, "$(DEVICE):CSWITCH") {
  field(ZRST, "ONE")
  field(ONST, "TWO")
  field(TWST, "THREE")
  field(THST, "FOUR")
}

record(ai, "$(DEVICE):ICCALIB") {
  field(VAL, "1")
  field(PINI, "YES")
}

record(ai, "$(DEVICE):IC1") {
  field(SCAN, "Passive")
}

record(calcout, "$(DEVICE):ICCALC1") {
  field(CALC, "A*B")
  field(INPA, "$(DEVICE):A")
  field(INPB, "$(DEVICE):ICCALIB")
  field(OUT, "$(DEVICE):IC1 PP")
  field(OOPT, "Every Time")
}

record(calcout, "$(DEVICE):ICCALC2") {
  field(CALC, "A*B")
  field(INPA, "$(DEVICE):B")
  field(INPB, "$(DEVICE):ICCALIB")
  field(OUT, "$(DEVICE):IC2 PP")
  field(OOPT, "Every Time")
}

record(calcout, "$(DEVICE):ICCALC3") {
  field(CALC, "A*B")
  field(INPA, "$(DEVICE):C")
  field(INPB, "$(DEVICE):ICCALIB")
  field(OUT, "$(DEVICE):IC3 PP")
  field(OOPT, "Every Time")
}

record(calcout, "$(DEVICE):ICCALC4") {
  field(CALC, "A*B")
  field(INPA, "$(DEVICE):D")
  field(INPB, "$(DEVICE):ICCALIB")
  field(OUT, "$(DEVICE):IC4 PP")
  field(OOPT, "Every Time")
}

record(ai, "$(DEVICE):IC2") {
  field(SCAN, "Passive")
}

record(ai, "$(DEVICE):IC3") {
  field(SCAN, "Passive")
}

record(ai, "$(DEVICE):IC4") {
  field(SCAN, "Passive")
}

record(bi, "$(DEVICE):GETCS2") {
  field(FLNK, "$(DEVICE):FAN3")
  field(SCAN, "1 second")
}

record(bo, "$(DEVICE):ENABLE_IC_UPDATES") {
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(VAL, "1")
  field(OUT, "$(DEVICE):GETCS2.DISA")
  field(ZNAM, "Disable")
  field(ONAM, "Enable")
}

record(fanout, "$(DEVICE):FAN3") {
  field(LNK1, "$(DEVICE):A")
  field(LNK2, "$(DEVICE):INCREMENT_XAXIS2")
  field(LNK3, "$(DEVICE):OSCILLATOR2")
}

record(calcout, "$(DEVICE):INCREMENT_XAXIS2") {
  field(SCAN, "Passive")
  field(CALC, "B=1?-2:A+1")
  field(OUT, "$(DEVICE):XAXIS2.VAL PP")
  field(OOPT, "Every Time")
}

record(ao, "$(DEVICE):XAXIS2") {
  field(SCAN, "Passive")
  field(VAL, "-1")
  field(DESC, "GRAPH X AXIS")
  field(PINI, "YES")
  field(OUT, "$(DEVICE):INCREMENT_XAXIS2.A")
}

record(bo, "$(DEVICE):RESET_PLOT2") {
  field(OUT, "$(DEVICE):INCREMENT_XAXIS2.B PP")
  field(DESC, "RESET THE GRAPH X AXIS")
}

record(bo, "$(DEVICE):TRIGGER2") {
  field(DESC, "TRIGGER PV FOR GRAPH")
  field(OUT, "$(DEVICE):OSCILLATOR2.A")
}

record(calcout, "$(DEVICE):OSCILLATOR2") {
  field(DESC, "OSCILLATE THE TRIGGER VALUE")
  field(SCAN, "Passive")
  field(CALC, "!A")
  field(OUT, "$(DEVICE):TRIGGER2.VAL PP")
  field(OOPT, "Every Time")
}

record(ao, "$(DEVICE):HV") {
  field(FLNK, "$(DEVICE):HVSEQ1")
  field(OUT, "$(DEVICE):HV2")
}

record(ao, "$(DEVICE):HV2") {
  field(DTYP, "stream")
  field(OUT, "@I404.protocol setHV() $(PORT) 0")
}

record(ai, "$(DEVICE):HVIN") {
  field(PINI, "YES")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getHV() $(PORT) 0")
}

record(ao, "$(DEVICE):HVMAX") {
  field(FLNK, "$(DEVICE):HVMSEQ")
  field(OUT, "$(DEVICE):HVMAX2.VAL")
}

record(seq, "$(DEVICE):HVMSEQ") {
  field(DESC, "NEED TO WAIT FOR HIVO")
  field(SCAN, "Passive")
  field(LNK1, "$(DEVICE):HVMAX2.PROC")
  field(LNK2, "$(DEVICE):HVMAXIN.PROC")
  field(DLY2, "1")
}

record(ao, "$(DEVICE):HVMAX2") {
  field(DTYP, "stream")
  field(OUT, "@I404.protocol setHVM() $(PORT) 0")
}

record(ai, "$(DEVICE):HVMAXIN") {
  field(PINI, "YES")
  field(DTYP, "stream")
  field(INP, "@I404.protocol getHVM() $(PORT) 0")
}

record(bo, "$(DEVICE):HVACTIVE") {
  field(ONAM, " ")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(VAL, "1")
  field(ZNAM, "Setting HIVO")
}

record(seq, "$(DEVICE):HVSEQ1") {
  field(DESC, "NEED TO WAIT FOR HIVO")
  field(SCAN, "Passive")
  field(LNK2, "$(DEVICE):ENBHVRCHK.PROC")
  field(LNK1, "$(DEVICE):DSBERR.PROC")
  field(LNK3, "$(DEVICE):HV2.PROC")
  field(LNK4, "$(DEVICE):ERR.PROC")
}

record(bo, "$(DEVICE):EXECUTE_CLEAR") {
  field(DESC, "CLEAR REGISTERS AND MESSAGES")
  field(DTYP, "stream")
  field(OUT, "@I404.protocol clear() $(PORT) 0")
}

record(dfanout, "$(DEVICE):FANOUT1") {
  field(SCAN, "Passive")
  field(OUTA, "$(DEVICE):HVRCHK.DISA")
  field(OUTB, "$(DEVICE):HVACTIVE PP")
}

record(bo, "$(DEVICE):DSBERR") {
  field(DOL, "1")
  field(OUT, "$(DEVICE):SCNERR.DISA")
}

record(bo, "$(DEVICE):ENBERR1") {
  field(DOL, "0")
  field(OUT, "$(DEVICE):SCNERR.DISA")
}

record(seq, "$(DEVICE):HVSEQ2") {
  field(LNK1, "$(DEVICE):DSBHVRCHK.PROC")
  field(LNK2, "$(DEVICE):EXECUTE_CLEAR.PROC")
  field(LNK3, "$(DEVICE):ENBERR1.PROC")
  field(LNK4, "$(DEVICE):HVIN.PROC")
}

record(calcout, "$(DEVICE):WAIT4HIVO") {
  field(OOPT, "When Non-zero")
  field(SCAN, "Passive")
  field(CALC, "A")
  field(INPA, "$(DEVICE):HVRCHK.VAL")
  field(OUT, "$(DEVICE):HVSEQ2.PROC")
}

record(bi, "$(DEVICE):HVRCHK") {
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(FLNK, "$(DEVICE):WAIT4HIVO")
  field(INP, "@I404.protocol checkHVR() $(PORT) 0")
  field(ZNAM, "SETTING HIVO")
  field(ONAM, "HIVO IDLE")
}

record(bo, "$(DEVICE):DSBHVRCHK") {
  field(PINI, "YES")
  field(DOL, "1")
  field(OUT, "$(DEVICE):FANOUT1.VAL PP")
  field(SCAN, "Passive")
}

record(bo, "$(DEVICE):ENBHVRCHK") {
  field(DOL, "0")
  field(OUT, "$(DEVICE):FANOUT1.VAL PP")
}

record(ao,"$(DEVICE):IntPeriod") {
  field(DESC,"Integration time setpoint")
  field(DTYP,"stream")
  field(OUT,"@I404.protocol setPeriod() $(PORT) 0")
  field(EGU,"s")
  field(DRVH,"65")
  field(DRVL,"0.0001")
  field(FLNK,"$(DEVICE):IntPeriod-I")
}

record(ai,"$(DEVICE):IntPeriod-I") {
  field(DESC,"Integration time readback")
  field(DTYP,"stream")
  field(PINI,"1")
  field(INP,"@I404.protocol getPeriod() $(PORT) 0")
  field(EGU,"s")
  field(HOPR,"65")
  field(LOPR,"0.0001")
}

record(ao,"$(DEVICE):SuppressFreq") {
  field(DESC,"Frequency to suppress")
  field(DTYP,"stream")
  field(OUT,"@I404.protocol setSuppressFreq() $(PORT) 0")
  field(EGU,"Hz")
  field(FLNK, "$(DEVICE):SuppressFreq-I")
}

record(ai,"$(DEVICE):SuppressFreq-I") {
  field(DESC,"Suppression frequency readback")
  field(DTYP,"stream")
  field(PINI,"1")
  field(INP,"@I404.protocol getSuppressFreq() $(PORT) 0")
  field(EGU,"Hz")
}

# ID string is > 40 chars. Thus the waveform here.
record(waveform,"$(DEVICE):Identity") {
  field(DESC,"Identification string")
  field(DTYP,"stream")
  field(PINI,"1")
  field(FTVL,"CHAR")
  field(NELM,"60")
  field(INP,"@I404.protocol getId() $(PORT) 0")
}
record(longout,"$(DEVICE):Resolution") {
  field(DESC,"Resolution setpoint")
  field(DTYP,"stream")
  field(EGU,"bits")
  field(OUT,"@I404.protocol setRes() $(PORT) 0")
  field(DRVH,"20")
  field(DRVL,"16")
  field(FLNK,"$(DEVICE):Resolution-I")
}

record(longin,"$(DEVICE):Resolution-I") {
  field(DESC,"Resolution readback")
  field(DTYP,"stream")
  field(PINI,"1")
  field(EGU,"bits")
  field(INP,"@I404.protocol getRes() $(PORT) 0")
  field(HOPR,"20")
  field(LOPR,"16")
}

record(stringin,"$(DEVICE):Password-I") {
  field(DTYP, "stream")
  field(PINI, "1") # this seems reqd, else "init" seq fails
  field(INP, "@I404.protocol getPassword() $(PORT) 0")
}

record(stringout,"$(DEVICE):Password") {
  field(DTYP, "stream")
  field(OMSL, "closed_loop")
  field(DOL, "$(DEVICE):Password-I PP")
  field(OUT,"@I404.protocol setPassword() $(PORT) 0")
}

